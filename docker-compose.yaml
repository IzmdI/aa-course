version: '3.8'

services:

  db:
    image: postgres:14.4-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB:  ${DB_NAME}
    restart: always
    ports:
      - "5432:5432"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_SERVER: ${KAFKA_SERVER}
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://${KAFKA_SERVER}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  kafka-init-topics:
    image: confluentinc/cp-kafka:7.3.2
    depends_on:
      - kafka
    environment:
      KAFKA_TOPIC_USER_STREAM: ${KAFKA_TOPIC_USER_STREAM}
      KAFKA_TOPIC_USER_ROLE: ${KAFKA_TOPIC_USER_ROLE}
      KAFKA_TOPIC_TASK_STREAM: ${KAFKA_TOPIC_TASK_STREAM}
      KAFKA_TOPIC_TASK_DONE: ${KAFKA_TOPIC_TASK_DONE}
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
              cub kafka-ready -b kafka:29092 1 30 && \
              kafka-topics --create --topic ${KAFKA_TOPIC_USER_STREAM} --partitions 4 --replication-factor 1 --if-not-exists --bootstrap-server kafka:29092 && \
              kafka-topics --create --topic ${KAFKA_TOPIC_USER_ROLE} --partitions 4 --replication-factor 1 --if-not-exists --bootstrap-server kafka:29092 && \
              kafka-topics --create --topic ${KAFKA_TOPIC_TASK_STREAM} --partitions 4 --replication-factor 1 --if-not-exists --bootstrap-server kafka:29092 && \
              kafka-topics --create --topic ${KAFKA_TOPIC_TASK_DONE} --partitions 4 --replication-factor 1 --if-not-exists --bootstrap-server kafka:29092'"

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8090:8080"
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

volumes:
  postgres_data:
